version: '3.8'

services:
  frontend:
    build:
      context: ./devagent-ui
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./devagent-ui:/app
      - /app/node_modules
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - devagent

  devagent:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./data:/app/data
    environment:
      - DEBUG=True
      - LOG_LEVEL=INFO
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://devagent:devagent@postgres:5432/devagent
      - REDIS_URL=redis://redis:6379
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    command: uvicorn devagent.api.main:app --host 0.0.0.0 --port 8000 --reload

  postgres:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=devagent
      - POSTGRES_PASSWORD=devagent
      - POSTGRES_DB=devagent
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devagent"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@devagent.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - postgres

  prometheus:
    image: prom/prometheus
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3001:3000"
    depends_on:
      - prometheus

  test:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    environment:
      - TESTING=True
      - DATABASE_URL=postgresql://devagent:devagent@postgres:5432/devagent_test
    depends_on:
      - postgres
    command: pytest -v --cov=devagent devagent/tests/

  lint:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    command: >
      sh -c "black . && isort . && flake8 . && mypy ."

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data: 