apiVersion: apps/v1
kind: Deployment
metadata:
  name: AgentProvision
  namespace: AgentProvision
spec:
  replicas: 3
  selector:
    matchLabels:
      app: AgentProvision
  template:
    metadata:
      labels:
        app: AgentProvision
    spec:
      containers:
      - name: AgentProvision
        image: AgentProvision:latest
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: AgentProvision-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: AgentProvision-secrets
              key: redis-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: AgentProvision-secrets
              key: jwt-secret
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: AgentProvision
  namespace: AgentProvision
spec:
  selector:
    app: AgentProvision
  ports:
  - port: 80
    targetPort: 8000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: AgentProvision
  namespace: AgentProvision
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - AgentProvision.example.com
    secretName: AgentProvision-tls
  rules:
  - host: AgentProvision.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: AgentProvision
            port:
              number: 80
