# Application configuration
replicaCount: 3
image:
  repository: gcr.io/aremko-e51ae/AgentProvision
  tag: latest
  pullPolicy: IfNotPresent

# Resource configuration
resources:
  requests:
    cpu: 100m
    memory: 256Mi
  limits:
    cpu: 500m
    memory: 512Mi

# Database configuration
databaseUrl: "postgresql://postgres:password@AgentProvision-db:5432/AgentProvision"
redisUrl: "redis://AgentProvision-redis:6379/0"

# Security configuration
jwtSecret: "your-secret-key"
jwtAlgorithm: "HS256"
accessTokenExpireMinutes: 30

# Monitoring configuration
prometheusUrl: "http://prometheus:9090"
grafanaUrl: "http://grafana:3000"

# Alerting configuration
alertWebhookUrl: "http://alertmanager:9093/api/v1/alerts"
smtpHost: "smtp.gmail.com"
smtpPort: "587"
smtpUser: "your-email@gmail.com"
smtpPassword: "your-app-password"
slackWebhookUrl: "https://hooks.slack.com/services/your-webhook-url"
teamsWebhookUrl: "https://outlook.office.com/webhook/your-webhook-url"

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - host: AgentProvision.example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: AgentProvision-tls
      hosts:
        - AgentProvision.example.com

# Configuration for the AgentProvision-ui subchart
AgentProvisionUi:
  enabled: true # Assuming we want to deploy it by default
  replicaCount: 1
  image:
    repository: gcr.io/aremko-e51ae/AgentProvision-ui
    tag: latest
    pullPolicy: IfNotPresent # Or Never, if image is definitely local
  service:
    type: ClusterIP
    port: 3000
    targetPort: 3000
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      kubernetes.io.ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - host: agents.datamatic.app # Main entry point for users
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
     - secretName: AgentProvision-ui-tls
       hosts:
         - agents.datamatic.app
    #  - secretName: AgentProvision-ui-tls
    #    hosts:
    #      - AgentProvision.local
  livenessProbe:
    enabled: true
    path: /file.svg # Health check for the root path
    port: 3000
    initialDelaySeconds: 15
    periodSeconds: 20
  readinessProbe:
    enabled: true
    path: /file.svg # Health check for the root path
    port: 3000
    initialDelaySeconds: 5
    periodSeconds: 10
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  serviceAccount:
    create: true
    annotations: {}
    name: ""

# Configuration for the PostgreSQL subchart (Bitnami)
postgresql:
  image:
    registry: docker.io
    repository: bitnami/postgresql
    tag: 14

# Configuration for the Redis subchart (Bitnami)
redis:
  image:
    registry: docker.io
    repository: bitnami/redis
    tag: 6
