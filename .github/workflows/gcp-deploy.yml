name: Deploy to GKE

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force rebuild of images even if no app code changed'
        required: false
        type: boolean
        default: false
      image_tag_override:
        description: 'Specify an exact image tag to deploy (overrides build)'
        required: false
        type: string
        default: ''

env:
  GCP_PROJECT_ID: aremko-e51ae
  GCP_REGION: southamerica-west1
  GKE_CLUSTER_NAME: devagent-gke
  GCR_HOSTNAME: gcr.io
  IMAGE_API: devagent-api
  IMAGE_UI: devagent-ui
  HELM_RELEASE_NAME: devagent
  HELM_NAMESPACE: devagent

permissions:
  contents: 'read'
  id-token: 'write'

jobs:
  check_paths:
    name: Check For Application Code Changes
    runs-on: ubuntu-latest
    outputs:
      app_code_changed: ${{ steps.filter.outputs.app_code_changed }}
      commit_sha: ${{ steps.set_sha.outputs.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set Commit SHA
        id: set_sha
        run: echo "::set-output name=sha::${{ github.sha }}"

      - name: Path Filter
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            app_code_changed:
              - 'devagent/**'
              - 'devagent-ui/**'
              - '.github/workflows/gcp-deploy.yml' # Rebuild if workflow itself changes

  build_images:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: check_paths
    # Run if app code changed OR if manually triggered with force_rebuild=true
    # Do NOT run if an image_tag_override is provided (implies using existing image)
    if: (needs.check_paths.outputs.app_code_changed == 'true' || github.event.inputs.force_rebuild == 'true') && github.event.inputs.image_tag_override == ''
    outputs:
      image_tag_built: ${{ needs.check_paths.outputs.commit_sha }} # Always output the SHA of the current commit
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: 'projects/828573473542/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider'
          service_account: 'github-actions-cicd@aremko-e51ae.iam.gserviceaccount.com'

      - name: Login to GCR
        run: gcloud auth configure-docker ${{ env.GCR_HOSTNAME }} --quiet

      - name: Build and push API image (SHA tag)
        run: |
          docker build -t ${{ env.GCR_HOSTNAME }}/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE_API }}:${{ needs.check_paths.outputs.commit_sha }} -f ./devagent/Dockerfile ./devagent
          docker push ${{ env.GCR_HOSTNAME }}/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE_API }}:${{ needs.check_paths.outputs.commit_sha }}

      - name: Tag and push API image (latest tag)
        run: |
          docker tag ${{ env.GCR_HOSTNAME }}/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE_API }}:${{ needs.check_paths.outputs.commit_sha }} ${{ env.GCR_HOSTNAME }}/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE_API }}:latest
          docker push ${{ env.GCR_HOSTNAME }}/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE_API }}:latest

      - name: Build and push UI image (SHA tag)
        run: |
          docker build --build-arg NEXT_PUBLIC_API_URL=/api -t ${{ env.GCR_HOSTNAME }}/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE_UI }}:${{ needs.check_paths.outputs.commit_sha }} -f ./devagent-ui/Dockerfile ./devagent-ui
          docker push ${{ env.GCR_HOSTNAME }}/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE_UI }}:${{ needs.check_paths.outputs.commit_sha }}

      - name: Tag and push UI image (latest tag)
        run: |
          docker tag ${{ env.GCR_HOSTNAME }}/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE_UI }}:${{ needs.check_paths.outputs.commit_sha }} ${{ env.GCR_HOSTNAME }}/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE_UI }}:latest
          docker push ${{ env.GCR_HOSTNAME }}/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE_UI }}:latest

  deploy_to_gke:
    name: Deploy to GKE
    runs-on: ubuntu-latest
    needs: [check_paths, build_images] # build_images is now an optional dependency due to its 'if' condition
    # Always run deploy step if triggered by push or manual (build_images might be skipped)
    if: ${{ always() }} 
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Determine Image Tag for Deployment
        id: determine_tag
        run: |
          tag_override="${{ github.event.inputs.image_tag_override }}"
          app_code_changed="${{ needs.check_paths.outputs.app_code_changed }}"
          built_tag="${{ needs.build_images.outputs.image_tag_built }}" # This will be empty if build_images was skipped
          commit_sha="${{ needs.check_paths.outputs.commit_sha }}"
          
          final_tag=""
          if [ -n "$tag_override" ]; then
            final_tag="$tag_override"
            echo "Using image_tag_override: $final_tag"
          elif [ "$app_code_changed" == "true" ] && [ -n "$built_tag" ]; then
            final_tag="$built_tag"
            echo "App code changed and images built. Using built tag: $final_tag"
          else
            final_tag="latest" # Default if no app code change, no override, or build skipped unexpectedly
            echo "No app code change or build skipped. Defaulting to 'latest' tag."
          fi
          echo "::set-output name=tag_to_deploy::$final_tag"

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: 'projects/828573473542/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider'
          service_account: 'github-actions-cicd@aremko-e51ae.iam.gserviceaccount.com'

      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ env.GKE_CLUSTER_NAME }}
          location: ${{ env.GCP_REGION }}
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Deploy Helm chart
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm dependency build ./helm/thefullstackagent
          helm upgrade --install ${{ env.HELM_RELEASE_NAME }} ./helm/thefullstackagent \
            --namespace ${{ env.HELM_NAMESPACE }} --create-namespace \
            -f ./helm/thefullstackagent/values-gcp.yaml \
            --set devagentApi.image.repository=${{ env.GCR_HOSTNAME }}/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE_API }} \
            --set devagent-ui.image.repository=${{ env.GCR_HOSTNAME }}/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE_UI }} \
            --set devagentApi.image.tag=${{ steps.determine_tag.outputs.tag_to_deploy }} \
            --set devagent-ui.image.tag=${{ steps.determine_tag.outputs.tag_to_deploy }} 